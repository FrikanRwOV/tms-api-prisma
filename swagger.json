{
  "openapi": "3.0.0",
  "info": {
    "title": "TMS API Documentation",
    "version": "1.0.0",
    "description": "API documentation for the Transport Management System"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "AnswerType": {
        "type": "string",
        "enum": [
          "TEXT",
          "BOOLEAN",
          "CHOICE",
          "FILE_UPLOAD"
        ]
      },
      "ExecutionStatus": {
        "type": "string",
        "enum": [
          "IN_PROGRESS",
          "COMPLETED",
          "CANCELLED"
        ]
      },
      "JobPriority": {
        "type": "string",
        "enum": [
          "HIGH",
          "MEDIUM",
          "LOW"
        ]
      },
      "JobStatus": {
        "type": "string",
        "enum": [
          "PENDING",
          "PLANNED",
          "BLOCKED",
          "IN_PROGRESS",
          "COMPLETED",
          "CANCELLED"
        ]
      },
      "JobType": {
        "type": "string",
        "enum": [
          "COLLECT_INTERNAL_SANDS",
          "COLLECT_EXTERNAL_SANDS",
          "COLLECT_INTERNAL_ORES",
          "COLLECT_EXTERNAL_ORES"
        ]
      },
      "Permission": {
        "type": "string",
        "enum": [
          "CREATE_USER",
          "READ_USER",
          "UPDATE_USER",
          "DELETE_USER",
          "MANAGE_ROLES",
          "CREATE_TRANSPORT_REQUEST",
          "READ_TRANSPORT_REQUEST",
          "UPDATE_TRANSPORT_REQUEST",
          "DELETE_TRANSPORT_REQUEST",
          "CREATE_MAINTENANCE",
          "READ_MAINTENANCE",
          "UPDATE_MAINTENANCE",
          "DELETE_MAINTENANCE",
          "VIEW_ASSIGNMENTS",
          "CREATE_VEHICLE",
          "READ_VEHICLE",
          "UPDATE_VEHICLE",
          "DELETE_VEHICLE"
        ]
      },
      "ProcedureType": {
        "type": "string",
        "enum": [
          "STANDARD",
          "EXCEPTION"
        ]
      },
      "QuestionType": {
        "type": "string",
        "enum": [
          "TEXT",
          "BOOLEAN",
          "CHOICE",
          "FILE_UPLOAD"
        ]
      },
      "Role": {
        "type": "string",
        "enum": [
          "ADMINISTRATOR",
          "TRANSPORT_MANAGER",
          "DRIVER",
          "REQUESTER",
          "WORKSHOP_MANAGER"
        ]
      },
      "SiteClassification": {
        "type": "string",
        "enum": [
          "GREEN",
          "ORANGE",
          "RED"
        ]
      },
      "VehicleStatus": {
        "type": "string",
        "enum": [
          "AVAILABLE",
          "IN_TRANSIT",
          "UNDER_MAINTENANCE",
          "OUT_OF_SERVICE"
        ]
      },
      "Area": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "site": {
            "$ref": "#/components/schemas/Site",
            "nullable": true
          },
          "siteId": {
            "type": "string"
          },
          "shafts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Shaft"
            },
            "nullable": true
          },
          "createdAt": {
            "$ref": "#/components/schemas/Date"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/Date"
          }
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "idNumber": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "contactNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "createdAt": {
            "$ref": "#/components/schemas/Date"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/Date"
          },
          "shafts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Shaft"
            },
            "nullable": true
          },
          "syndicates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Syndicate"
            },
            "nullable": true
          }
        }
      },
      "Exception": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "execution": {
            "$ref": "#/components/schemas/Execution",
            "nullable": true
          },
          "executionId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "evidence": {
            "$ref": "#/components/schemas/JsonValue"
          },
          "createdAt": {
            "$ref": "#/components/schemas/Date"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/Date"
          }
        }
      },
      "Execution": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "procedure": {
            "$ref": "#/components/schemas/Procedure",
            "nullable": true
          },
          "procedureId": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User",
            "nullable": true
          },
          "userId": {
            "type": "string"
          },
          "responses": {
            "$ref": "#/components/schemas/JsonValue"
          },
          "status": {
            "type": "string",
            "enum": [
              "IN_PROGRESS",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "startTime": {
            "$ref": "#/components/schemas/Date"
          },
          "exceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Exception"
            },
            "nullable": true
          },
          "createdAt": {
            "$ref": "#/components/schemas/Date"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/Date"
          }
        }
      },
      "Job": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "priority": {
            "type": "string",
            "enum": [
              "HIGH",
              "MEDIUM",
              "LOW"
            ]
          },
          "siteClassification": {
            "type": "string",
            "enum": [
              "GREEN",
              "ORANGE",
              "RED"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "PLANNED",
              "BLOCKED",
              "IN_PROGRESS",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobAttachment"
            },
            "nullable": true
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobComment"
            },
            "nullable": true
          },
          "createdAt": {
            "$ref": "#/components/schemas/Date"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/Date"
          },
          "shaft": {
            "$ref": "#/components/schemas/Shaft",
            "nullable": true
          },
          "shaftId": {
            "type": "string"
          }
        }
      },
      "JobAttachment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "job": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "priority": {
                "type": "string",
                "enum": [
                  "HIGH",
                  "MEDIUM",
                  "LOW"
                ]
              },
              "siteClassification": {
                "type": "string",
                "enum": [
                  "GREEN",
                  "ORANGE",
                  "RED"
                ]
              },
              "status": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PLANNED",
                  "BLOCKED",
                  "IN_PROGRESS",
                  "COMPLETED",
                  "CANCELLED"
                ]
              },
              "attachments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JobAttachment"
                },
                "nullable": true
              },
              "comments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JobComment"
                },
                "nullable": true
              },
              "createdAt": {
                "$ref": "#/components/schemas/Date"
              },
              "updatedAt": {
                "$ref": "#/components/schemas/Date"
              },
              "shaft": {
                "$ref": "#/components/schemas/Shaft",
                "nullable": true
              },
              "shaftId": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "jobId": {
            "type": "string"
          },
          "fileUrl": {
            "type": "string"
          },
          "fileType": {
            "type": "string"
          },
          "createdAt": {
            "$ref": "#/components/schemas/Date"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/Date"
          }
        }
      },
      "JobComment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "job": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "priority": {
                "type": "string",
                "enum": [
                  "HIGH",
                  "MEDIUM",
                  "LOW"
                ]
              },
              "siteClassification": {
                "type": "string",
                "enum": [
                  "GREEN",
                  "ORANGE",
                  "RED"
                ]
              },
              "status": {
                "type": "string",
                "enum": [
                  "PENDING",
                  "PLANNED",
                  "BLOCKED",
                  "IN_PROGRESS",
                  "COMPLETED",
                  "CANCELLED"
                ]
              },
              "attachments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JobAttachment"
                },
                "nullable": true
              },
              "comments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/JobComment"
                },
                "nullable": true
              },
              "createdAt": {
                "$ref": "#/components/schemas/Date"
              },
              "updatedAt": {
                "$ref": "#/components/schemas/Date"
              },
              "shaft": {
                "$ref": "#/components/schemas/Shaft",
                "nullable": true
              },
              "shaftId": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "jobId": {
            "type": "string"
          },
          "author": {
            "$ref": "#/components/schemas/User",
            "nullable": true
          },
          "authorId": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "$ref": "#/components/schemas/Date"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/Date"
          }
        }
      },
      "Maintenance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "vehicle": {
            "$ref": "#/components/schemas/Vehicle",
            "nullable": true
          },
          "vehicleId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "startDate": {
            "$ref": "#/components/schemas/Date"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "$ref": "#/components/schemas/Date"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/Date"
          }
        }
      },
      "Procedure": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "STANDARD",
              "EXCEPTION"
            ]
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Question"
            },
            "nullable": true
          },
          "executions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Execution"
            },
            "nullable": true
          },
          "createdAt": {
            "$ref": "#/components/schemas/Date"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/Date"
          }
        }
      },
      "Question": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "procedure": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "STANDARD",
                  "EXCEPTION"
                ]
              },
              "questions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Question"
                },
                "nullable": true
              },
              "executions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Execution"
                },
                "nullable": true
              },
              "createdAt": {
                "$ref": "#/components/schemas/Date"
              },
              "updatedAt": {
                "$ref": "#/components/schemas/Date"
              }
            },
            "nullable": true
          },
          "procedureId": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "answerType": {
            "type": "string",
            "enum": [
              "TEXT",
              "BOOLEAN",
              "CHOICE",
              "FILE_UPLOAD"
            ]
          },
          "order": {
            "type": "number"
          },
          "createdAt": {
            "$ref": "#/components/schemas/Date"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/Date"
          },
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "BOOLEAN",
              "CHOICE",
              "FILE_UPLOAD"
            ]
          }
        }
      },
      "RolePermission": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMINISTRATOR",
              "TRANSPORT_MANAGER",
              "DRIVER",
              "REQUESTER",
              "WORKSHOP_MANAGER"
            ]
          },
          "permission": {
            "type": "string",
            "enum": [
              "CREATE_USER",
              "READ_USER",
              "UPDATE_USER",
              "DELETE_USER",
              "MANAGE_ROLES",
              "CREATE_TRANSPORT_REQUEST",
              "READ_TRANSPORT_REQUEST",
              "UPDATE_TRANSPORT_REQUEST",
              "DELETE_TRANSPORT_REQUEST",
              "CREATE_MAINTENANCE",
              "READ_MAINTENANCE",
              "UPDATE_MAINTENANCE",
              "DELETE_MAINTENANCE",
              "VIEW_ASSIGNMENTS",
              "CREATE_VEHICLE",
              "READ_VEHICLE",
              "UPDATE_VEHICLE",
              "DELETE_VEHICLE"
            ]
          },
          "createdAt": {
            "$ref": "#/components/schemas/Date"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/Date"
          }
        }
      },
      "Session": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "expiresAt": {
            "$ref": "#/components/schemas/Date"
          },
          "user": {
            "$ref": "#/components/schemas/User",
            "nullable": true
          }
        }
      },
      "Shaft": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "area": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "site": {
                "$ref": "#/components/schemas/Site",
                "nullable": true
              },
              "siteId": {
                "type": "string"
              },
              "shafts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Shaft"
                },
                "nullable": true
              },
              "createdAt": {
                "$ref": "#/components/schemas/Date"
              },
              "updatedAt": {
                "$ref": "#/components/schemas/Date"
              }
            },
            "nullable": true
          },
          "areaId": {
            "type": "string"
          },
          "createdAt": {
            "$ref": "#/components/schemas/Date"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/Date"
          },
          "client": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "idNumber": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "contactNumber": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "createdAt": {
                "$ref": "#/components/schemas/Date"
              },
              "updatedAt": {
                "$ref": "#/components/schemas/Date"
              },
              "shafts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Shaft"
                },
                "nullable": true
              },
              "syndicates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Syndicate"
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "clientId": {
            "type": "string"
          },
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Job"
            },
            "nullable": true
          }
        }
      },
      "Syndicate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "$ref": "#/components/schemas/Date"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/Date"
          },
          "clients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Client"
            },
            "nullable": true
          }
        }
      },
      "Site": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "createdAt": {
            "$ref": "#/components/schemas/Date"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/Date"
          },
          "areas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Area"
            },
            "nullable": true
          }
        }
      },
      "Telematics": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "vehicle": {
            "$ref": "#/components/schemas/Vehicle",
            "nullable": true
          },
          "vehicleId": {
            "type": "string"
          },
          "kilometresTravelled": {
            "type": "number"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/Date"
          },
          "createdAt": {
            "$ref": "#/components/schemas/Date"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/Date"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Auto-generated unique identifier"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMINISTRATOR",
              "TRANSPORT_MANAGER",
              "DRIVER",
              "REQUESTER",
              "WORKSHOP_MANAGER"
            ]
          },
          "sessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Session"
            },
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          },
          "createdAt": {
            "$ref": "#/components/schemas/Date",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/Date",
            "type": "string",
            "format": "date-time"
          },
          "assignedJobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Job"
            },
            "nullable": true
          },
          "requestedJobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Job"
            },
            "nullable": true
          },
          "jobComments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobComment"
            },
            "nullable": true
          },
          "executions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Execution"
            },
            "nullable": true
          },
          "middleName": {
            "type": "string"
          },
          "idNumber": {
            "type": "string"
          },
          "contactNumber": {
            "type": "string"
          },
          "whatsapp": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "firstName",
          "lastName",
          "role"
        ]
      },
      "Vehicle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "registrationNumber": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/VehicleType",
            "nullable": true
          },
          "typeId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "AVAILABLE",
              "IN_TRANSIT",
              "UNDER_MAINTENANCE",
              "OUT_OF_SERVICE"
            ]
          },
          "maintenanceRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Maintenance"
            },
            "nullable": true
          },
          "createdAt": {
            "$ref": "#/components/schemas/Date"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/Date"
          }
        }
      },
      "VehicleType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "vehicles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Vehicle"
            },
            "nullable": true
          },
          "createdAt": {
            "$ref": "#/components/schemas/Date"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/Date"
          }
        }
      },
      "VerificationCode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "expiresAt": {
            "$ref": "#/components/schemas/Date"
          },
          "createdAt": {
            "$ref": "#/components/schemas/Date"
          }
        }
      },
      "Date": {
        "type": "string",
        "format": "date-time"
      },
      "JsonValue": {
        "type": "object",
        "additionalProperties": true
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://zfnsz3gffi.execute-api.eu-west-1.amazonaws.com",
      "description": "Development API"
    },
    {
      "url": "http://localhost:3000",
      "description": "Local Development"
    }
  ],
  "paths": {
    "/area": {
      "post": {
        "tags": [
          "Area"
        ],
        "summary": "Create a new area",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Area"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Area created successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": [
          "Area"
        ],
        "summary": "Get all areas",
        "responses": {
          "200": {
            "description": "List of areas retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Area"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/area/{id}": {
      "get": {
        "tags": [
          "Area"
        ],
        "summary": "Get an area by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Area found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Area"
                }
              }
            }
          },
          "404": {
            "description": "Area not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": [
          "Area"
        ],
        "summary": "Update an area",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Area"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Area updated successfully"
          },
          "404": {
            "description": "Area not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Area"
        ],
        "summary": "Delete an area",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Area deleted successfully"
          },
          "404": {
            "description": "Area not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logout user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/mobile/login": {
      "post": {
        "tags": [
          "Mobile Authentication"
        ],
        "summary": "Mobile login endpoint supporting multiple auth methods",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "loginMethod"
                ],
                "properties": {
                  "loginMethod": {
                    "type": "string",
                    "enum": [
                      "password",
                      "apple",
                      "google"
                    ]
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "idToken": {
                    "type": "string"
                  },
                  "user": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful or OTP sent"
          },
          "400": {
            "description": "Invalid credentials or user not found"
          },
          "500": {
            "description": "Failed to process login request"
          }
        }
      }
    },
    "/auth/mobile/logout": {
      "post": {
        "tags": [
          "Mobile Authentication"
        ],
        "summary": "Mobile logout endpoint",
        "responses": {
          "200": {
            "description": "Mobile logout successful"
          }
        }
      }
    },
    "/auth/forgot-password/request": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Request password reset code",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset code sent successfully"
          },
          "400": {
            "description": "User not found"
          },
          "500": {
            "description": "Failed to send reset code"
          }
        }
      }
    },
    "/auth/forgot-password/reset": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Reset password with verification code",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "code",
                  "newPassword"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "code": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful"
          },
          "400": {
            "description": "Invalid or expired code"
          },
          "500": {
            "description": "Failed to reset password"
          }
        }
      }
    },
    "/auth/mobile/forgot-password/request": {
      "post": {
        "tags": [
          "Mobile Authentication"
        ],
        "summary": "Request mobile password reset OTP",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset OTP sent successfully"
          },
          "400": {
            "description": "Mobile user not found"
          },
          "500": {
            "description": "Failed to send reset OTP"
          }
        }
      }
    },
    "/auth/mobile/forgot-password/verify": {
      "post": {
        "tags": [
          "Mobile Authentication"
        ],
        "summary": "Verify mobile password reset OTP",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "otp"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "otp": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP verified successfully"
          },
          "400": {
            "description": "Invalid or expired OTP"
          },
          "500": {
            "description": "Failed to verify OTP"
          }
        }
      }
    },
    "/auth/mobile/forgot-password/reset": {
      "post": {
        "tags": [
          "Mobile Authentication"
        ],
        "summary": "Complete mobile password reset with OTP",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "otp",
                  "newPassword"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "otp": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired OTP"
          },
          "500": {
            "description": "Failed to reset password"
          }
        }
      }
    },
    "/auth/mobile/update-password": {
      "post": {
        "tags": [
          "Mobile Authentication"
        ],
        "summary": "Update mobile user password",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "currentPassword",
                  "newPassword"
                ],
                "properties": {
                  "currentPassword": {
                    "type": "string",
                    "format": "password"
                  },
                  "newPassword": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully"
          },
          "400": {
            "description": "Invalid current password"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Failed to update password"
          }
        }
      }
    },
    "/mobile/me": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get current user details",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "trade": {
                      "type": "string"
                    },
                    "dateOfBirth": {
                      "type": "string",
                      "format": "date"
                    },
                    "mobileNumber": {
                      "type": "string"
                    },
                    "postalCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Failed to retrieve user details"
          }
        }
      }
    },
    "/client": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Create a new client",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Client created successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Get all clients",
        "responses": {
          "200": {
            "description": "List of clients retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/client/{id}": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Get a client by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Client found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "404": {
            "description": "Client not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": [
          "Client"
        ],
        "summary": "Update a client",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Client updated successfully"
          },
          "404": {
            "description": "Client not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Client"
        ],
        "summary": "Delete a client",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Client deleted successfully"
          },
          "404": {
            "description": "Client not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/exception": {
      "post": {
        "tags": [
          "Exception"
        ],
        "summary": "Create a new exception",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Exception"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Exception created successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": [
          "Exception"
        ],
        "summary": "Get all exceptions",
        "responses": {
          "200": {
            "description": "List of exceptions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Exception"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/exception/{id}": {
      "get": {
        "tags": [
          "Exception"
        ],
        "summary": "Get an exception by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exception found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Exception"
                }
              }
            }
          },
          "404": {
            "description": "Exception not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": [
          "Exception"
        ],
        "summary": "Update an exception",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Exception"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Exception updated successfully"
          },
          "404": {
            "description": "Exception not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Exception"
        ],
        "summary": "Delete an exception",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Exception deleted successfully"
          },
          "404": {
            "description": "Exception not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/job": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Create a new job",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Job"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Job created successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Get all jobs",
        "responses": {
          "200": {
            "description": "List of jobs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Job"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/job/{id}": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Get a job by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "404": {
            "description": "Job not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": [
          "Job"
        ],
        "summary": "Update a job",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Job"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Job updated successfully"
          },
          "404": {
            "description": "Job not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Job"
        ],
        "summary": "Delete a job",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Job deleted successfully"
          },
          "404": {
            "description": "Job not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/job/{id}/comment": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Add a comment to a job",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "authorId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment added successfully"
          },
          "404": {
            "description": "Job not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/procedure": {
      "post": {
        "tags": [
          "Procedure"
        ],
        "summary": "Create a new procedure",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Procedure"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Procedure created successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": [
          "Procedure"
        ],
        "summary": "Get all procedures",
        "responses": {
          "200": {
            "description": "List of procedures retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Procedure"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/procedure/{id}": {
      "get": {
        "tags": [
          "Procedure"
        ],
        "summary": "Get a procedure by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Procedure found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Procedure"
                }
              }
            }
          },
          "404": {
            "description": "Procedure not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": [
          "Procedure"
        ],
        "summary": "Update a procedure",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Procedure"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Procedure updated successfully"
          },
          "404": {
            "description": "Procedure not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Procedure"
        ],
        "summary": "Delete a procedure",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Procedure deleted successfully"
          },
          "404": {
            "description": "Procedure not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/shaft": {
      "post": {
        "tags": [
          "Shaft"
        ],
        "summary": "Create a new shaft",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shaft"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Shaft created successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": [
          "Shaft"
        ],
        "summary": "Get all shafts",
        "responses": {
          "200": {
            "description": "List of shafts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shaft"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/shaft/{id}": {
      "get": {
        "tags": [
          "Shaft"
        ],
        "summary": "Get a shaft by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shaft found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shaft"
                }
              }
            }
          },
          "404": {
            "description": "Shaft not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": [
          "Shaft"
        ],
        "summary": "Update a shaft",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shaft"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Shaft updated successfully"
          },
          "404": {
            "description": "Shaft not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Shaft"
        ],
        "summary": "Delete a shaft",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Shaft deleted successfully"
          },
          "404": {
            "description": "Shaft not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/site": {
      "post": {
        "tags": [
          "Site"
        ],
        "summary": "Create a new site",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Site"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Site created successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": [
          "Site"
        ],
        "summary": "Get all sites",
        "responses": {
          "200": {
            "description": "List of sites retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Site"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/site/{id}": {
      "get": {
        "tags": [
          "Site"
        ],
        "summary": "Get a site by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Site found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Site"
                }
              }
            }
          },
          "404": {
            "description": "Site not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": [
          "Site"
        ],
        "summary": "Update a site",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Site"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Site updated successfully"
          },
          "404": {
            "description": "Site not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Site"
        ],
        "summary": "Delete a site",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Site deleted successfully"
          },
          "404": {
            "description": "Site not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/syndicate": {
      "post": {
        "tags": [
          "Syndicate"
        ],
        "summary": "Create a new syndicate",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Syndicate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Syndicate created successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": [
          "Syndicate"
        ],
        "summary": "Get all syndicates",
        "responses": {
          "200": {
            "description": "List of syndicates retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Syndicate"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/syndicate/{id}": {
      "get": {
        "tags": [
          "Syndicate"
        ],
        "summary": "Get a syndicate by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Syndicate found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Syndicate"
                }
              }
            }
          },
          "404": {
            "description": "Syndicate not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": [
          "Syndicate"
        ],
        "summary": "Update a syndicate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Syndicate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Syndicate updated successfully"
          },
          "404": {
            "description": "Syndicate not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Syndicate"
        ],
        "summary": "Delete a syndicate",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Syndicate deleted successfully"
          },
          "404": {
            "description": "Syndicate not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "List of users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get a user by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update a user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/vehicle": {
      "post": {
        "tags": [
          "Vehicle"
        ],
        "summary": "Create a new vehicle",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Vehicle"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Vehicle created successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "Get all vehicles",
        "responses": {
          "200": {
            "description": "List of vehicles retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vehicle"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/vehicle/{id}": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "Get a vehicle by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vehicle found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vehicle"
                }
              }
            }
          },
          "404": {
            "description": "Vehicle not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": [
          "Vehicle"
        ],
        "summary": "Update a vehicle",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Vehicle"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vehicle updated successfully"
          },
          "404": {
            "description": "Vehicle not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Vehicle"
        ],
        "summary": "Delete a vehicle",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Vehicle deleted successfully"
          },
          "404": {
            "description": "Vehicle not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "tags": []
}